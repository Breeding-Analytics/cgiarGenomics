% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geno_read_base.R
\name{get_allelic_dosage}
\alias{get_allelic_dosage}
\title{From locus genotype call data, get the allelic dosage given the alleles and ploidity}
\usage{
get_allelic_dosage(l, alleles, ploidity, sep = "")
}
\arguments{
\item{l}{A list of genotype calls, e.g., c("AG", "GG", "AA").}

\item{alleles}{ref and alternative allele, e.g., c("A", "C").}

\item{ploidity}{Integer. The ploidity level of the organism.}
}
\value{
A list of integers, representing the allelic dosages for the input
        genotype calls.
}
\description{
This function takes a list of genotype calls, a named vector of allele counts,
and the ploidity level as input, and returns a list of allelic dosages for the
genotype calls. The allelic dosage is the count of the alternative allele in
the genotype call.
}
\details{
The function first generates all possible genotype calls for the given alleles
and ploidity level using the `get_all_gt_calls` function. It then calculates
the allelic dosages for these possible genotype calls using the `convert_gt_to_dosage`
function, treating the second allele as the alternative allele.

Finally, the function replaces the genotype calls in the input list with their
corresponding allelic dosages using the `replace_strings_with_integers` function.

If a genotype call in the input list is not found in the set of possible genotype
calls, its allelic dosage will be set to NA.
}
\examples{
genotypes <- c("AG", "GG", "AA")
allele_counts <- c(A = 10, G = 20)
get_allelic_dosage(genotypes, allele_counts, 2)  # Returns list(1, 2, 0)

# Example with missing genotype call
genotypes <- c("AG", "XX", "AA")
allele_counts <- c(A = 10, G = 20)
get_allelic_dosage(genotypes, allele_counts, 2)  # Returns list(1, NA, 0)
}
